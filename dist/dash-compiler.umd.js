(function(_,T){typeof exports=="object"&&typeof module!="undefined"?T(exports,require("mc-project-core"),require("path-browserify"),require("molang"),require("bridge-common-utils"),require("json5"),require("@swc/wasm-web"),require("bridge-js-runtime"),require("is-glob")):typeof define=="function"&&define.amd?define(["exports","mc-project-core","path-browserify","molang","bridge-common-utils","json5","@swc/wasm-web","bridge-js-runtime","is-glob"],T):(_=typeof globalThis!="undefined"?globalThis:_||self,T(_.DashCompiler={},_.mcProjectCore,_.pathBrowserify,_.molang,_.bridgeCommonUtils,_.json5,_.wasmWeb,_.bridgeJsRuntime,_.isGlob))})(this,function(_,T,j,O,A,se,ie,R,ne){"use strict";function B(a){return a&&typeof a=="object"&&"default"in a?a:{default:a}}var H=B(se),re=B(ne);class ae extends T.ProjectConfig{constructor(e,t){super(j.dirname(t)),this.fileSystem=e,this.configPath=t}readConfig(){return this.fileSystem.readJson(this.configPath)}writeConfig(e){return this.fileSystem.writeJson(this.configPath,e)}}class oe{constructor(e,t,s){this.dash=e,this.pluginId=t,this.plugin=s}implementsHook(e){return typeof this.plugin[e]=="function"}async runBuildStartHook(){var e,t;try{return await((t=(e=this.plugin).buildStart)==null?void 0:t.call(e))}catch(s){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "buildStart" hook:`,s)}}async runIncludeHook(){var e,t;try{return await((t=(e=this.plugin).include)==null?void 0:t.call(e))}catch(s){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "include" hook:`,s)}}async runIgnoreHook(e){var t,s;try{return await((s=(t=this.plugin).ignore)==null?void 0:s.call(t,e))}catch(i){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "ignore" hook for "${e}":`,i)}}async runTransformPathHook(e){var t,s;try{return await((s=(t=this.plugin).transformPath)==null?void 0:s.call(t,e))}catch(i){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "transformPath" hook for "${e}":`,i)}}async runReadHook(e,t){var s,i;try{return await((i=(s=this.plugin).read)==null?void 0:i.call(s,e,t))}catch(n){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "read" hook for "${e}":`,n)}}async runLoadHook(e,t){var s,i;try{return await((i=(s=this.plugin).load)==null?void 0:i.call(s,e,t))}catch(n){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "load" hook for "${e}":`,n)}}async runRegisterAliasesHook(e,t){var s,i;try{return await((i=(s=this.plugin).registerAliases)==null?void 0:i.call(s,e,t))}catch(n){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "registerAliases" hook for "${e}":`,n)}}async runRequireHook(e,t){var s,i;try{return await((i=(s=this.plugin).require)==null?void 0:i.call(s,e,t))}catch(n){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "require" hook for "${e}":`,n)}}async runTransformHook(e,t,s){var i,n;try{return await((n=(i=this.plugin).transform)==null?void 0:n.call(i,e,t,s))}catch(r){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "transform" hook for "${e}":`,r)}}async runFinalizeBuildHook(e,t){var s,i;try{return await((i=(s=this.plugin).finalizeBuild)==null?void 0:i.call(s,e,t))}catch(n){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "finalizeBuild" hook for "${e}":`,n)}}async runBuildEndHook(){var e,t;try{return await((t=(e=this.plugin).buildEnd)==null?void 0:t.call(e))}catch(s){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "buildEnd" hook:`,s)}}async runBeforeFileUnlinked(e){var t,s;try{return await((s=(t=this.plugin).beforeFileUnlinked)==null?void 0:s.call(t,e))}catch(i){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "beforeFileUnlinked" hook for "${e}":`,i)}}}const le=({options:a,outputFileSystem:e,hasComMojangDirectory:t,projectConfig:s,projectRoot:i,packType:n})=>{var c;a.buildName||(a.buildName=a.mode==="development"?"dev":"dist"),a.packName||(a.packName="Bridge"),(c=a.rewriteToComMojang)==null||c||(t=!1);const r={behaviorPack:"development_behavior_packs",resourcePack:"development_resource_packs",skinPack:"skin_packs",worldTemplate:"minecraftWorlds"},o=p=>t&&a.mode==="development"?`${r[p]}`:`${i}/builds/${a.buildName}`,l=(p,w)=>`${o(p)}/${a.packName} ${w}`;return{async buildStart(){if(a.mode==="production"||a.buildType==="fullBuild")if(t)for(const p in r){const w=n.getFromId(p);!w||await e.unlink(l(p,w.defaultPackPath)).catch(()=>{})}else await e.unlink(o("BP")).catch(()=>{})},transformPath(p){var h,F;if(!p||p.includes("BP/scripts/gametests/")&&a.mode==="production")return;const w=n==null?void 0:n.get(p);if(!w)return;const d=s.getAbsolutePackRoot(w.id),y=j.relative(d,p);if(["behaviorPack","resourcePack","skinPack","worldTemplate"].includes(w.id))return j.join(l(w.id,(F=(h=a.packNameSuffix)==null?void 0:h[w.id])!=null?F:w.defaultPackPath),y)}}},z=({fileType:a,projectConfig:e,requestJsonData:t,options:s,console:i,jsRuntime:n})=>{const r=(h,F)=>e.resolvePackPath(h,F),o=new O.CustomMoLang({}),l=h=>h==null?void 0:h.endsWith(".molang"),c=e.resolvePackPath("behaviorPack","scripts/molang/"),p=h=>h==null?void 0:h.startsWith(c),w=new Map,d=h=>{if(w.has(h))return w.get(h);const F=s.include[a.getId(h)];return w.set(h,F),F};let y=[];return{async buildStart(){s.include=Object.assign(await t("data/packages/minecraftBedrock/location/validMoLang.json"),s.include),w.clear()},ignore(h){return!l(h)&&!p(h)&&!d(h)},transformPath(h){if(l(h)||p(h))return null},async read(h,F){if((l(h)||p(h))&&F){const v=await F.getFile();return await(v==null?void 0:v.text())}else if(d(h)&&h.endsWith(".json")&&F){const v=await F.getFile();if(!v)return;try{return H.default.parse(await v.text())}catch(b){return s.buildType!=="fileRequest"&&i.error(`Error within file "${h}": ${b}`),{__error__:`Failed to load original file: ${b}`}}}},async load(h,F){if(l(h)&&F)o.parse(F);else if(p(h)){const v=await n.run(h,{console:i},F).catch(b=>(i.error(`Failed to execute Molang AST script "${h}": ${b}`),null));if(!v)return null;typeof v.__default__=="function"&&y.push(v.__default__)}},async require(h){if(d(h))return[r("behaviorPack","scripts/molang/**/*.[jt]s"),r("behaviorPack","molang/**/*.molang"),r("resourcePack","molang/**/*.molang")]},async transform(h,F){const v=d(h);v&&v.length>0&&v.forEach(b=>A.setObjectAt(b,F,$=>{if(typeof $!="string"||$[0]==="/"||$[0]==="@")return $;if(y.length>0){let m=null;try{m=o.parse($)}catch(u){s.buildType!=="fileRequest"&&i.error(`Error within file "${h}"; script "${$}": ${u}`)}if(m){for(const u of y)m=m.walk(u);$=m.toString()}}try{return o.transform($)}catch(m){return s.buildType!=="fileRequest"&&i.error(`Error within file "${h}"; script "${$}": ${m}`),$}}))},finalizeBuild(h,F){if(d(h)&&typeof F!="string")return JSON.stringify(F,null,"	")},buildEnd(){y=[]}}},ce=({fileType:a})=>({ignore(e){return(a==null?void 0:a.getId(e))!=="entity"},registerAliases(e,t){var s,i,n,r;if((a==null?void 0:a.getId(e))==="entity"&&((i=(s=t==null?void 0:t["minecraft:entity"])==null?void 0:s.description)==null?void 0:i.identifier))return[(r=(n=t==null?void 0:t["minecraft:entity"])==null?void 0:n.description)==null?void 0:r.identifier]}});function ue(a,e){const t=L(a),s=L(e),i=t.pop(),n=s.pop(),r=G(t,s);return r!==0?r:i&&n?G(i.split("."),n.split(".")):i||n?i?-1:1:0}const de=(a,e,t)=>{fe(t);const s=ue(a,e);return K[t].includes(s)},he=/^[v^~<>=]*?(\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)*))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i,L=a=>{if(typeof a!="string")throw new TypeError("Invalid argument expected string");const e=a.match(he);if(!e)throw new Error(`Invalid argument not valid semver ('${a}' received)`);return e.shift(),e},V=a=>a==="*"||a==="x"||a==="X",U=a=>{const e=parseInt(a,10);return isNaN(e)?a:e},me=(a,e)=>typeof a!=typeof e?[String(a),String(e)]:[a,e],pe=(a,e)=>{if(V(a)||V(e))return 0;const[t,s]=me(U(a),U(e));return t>s?1:t<s?-1:0},G=(a,e)=>{for(let t=0;t<Math.max(a.length,e.length);t++){const s=pe(a[t]||0,e[t]||0);if(s!==0)return s}return 0},K={">":[1],">=":[0,1],"=":[0],"<=":[-1,0],"<":[-1]},X=Object.keys(K),fe=a=>{if(typeof a!="string")throw new TypeError(`Invalid operator type, expected string but got ${typeof a}`);if(X.indexOf(a)===-1)throw new Error(`Invalid operator, expected one of ${X.join("|")}`)},ge=(a,e)=>({register:t=>{var s;((s=t.type)!=null?s:"entity")===e&&(a.component=({name:i,schema:n,template:r})=>{const o=new t;i(t.component_name),n(P(Object.values(o.onPropose())[0])),r((l,{create:c})=>{c(o.onApply(l,"components")[`minecraft:${e}`])})})}});function P(a){const e={},t=Object.keys(a);if(t.length===1&&t[0].startsWith("$dynamic.list."))return{type:"array",items:P(Object.values(a)[0])};for(const[s,i]of Object.entries(a))s.startsWith("$")||(typeof i=="string"?e[s]=ye(i):Array.isArray(i)?e[s]={enum:i}:i==="object"&&(e[s]=P(i)));return{type:"object",properties:e}}function ye(a){switch(a){case"$general.boolean":return{type:"boolean"};case"$general.number":return{type:"integer"};case"$general.decimal":return{type:"number"};default:return{type:["number","integer","string","boolean","object","array"]}}}class Q{constructor(e,t,s,i,n,r){this.console=e,this.fileType=t,this.componentSrc=s,this.mode=i,this.v1Compat=n,this.targetVersion=r,this.animations=[],this.animationControllers=[],this.createOnPlayer=[],this.dialogueScenes={},this.serverFiles=[],this.clientFiles={},this.lifecycleHookCount={activated:0,deactivated:0}}setProjectConfig(e){this.projectConfig=e}get name(){return this._name}async load(e,t,s){let i={component:null};const n=await e.run(t,{defineComponent:c=>c,console:this.console,Bridge:this.v1Compat?ge(i,this.fileType):void 0}).catch(c=>(this.console.error(`Failed to execute component "${t}": ${c}`),null));if(!n)return!1;if(typeof n.__default__!="function")if(i.component)n.__default__=i.component;else return this.console.error(`Component ${t} is not a valid component. Expected a function as the default export.`),!1;const r=c=>this._name=c;let o=c=>this.schema=c,l=()=>{};return(!s||s==="server")&&(o=()=>{},l=c=>{this.template=(p,w)=>{try{c(p,w)}catch(d){this.console.log(c.toString()),this.console.error(d)}}}),await n.__default__({name:r,schema:o,template:l}),!0}reset(){this.animations=[],this.animationControllers=[],this.clientFiles={},this.serverFiles=[]}getSchema(){return this.schema}toString(){return this.componentSrc}create(e,t,s=`minecraft:${this.fileType}`,i){var l;const n=s.split("/"),r=n.pop(),o=this.getObjAtLocation(e,[...n]);o[r]=(i?(c,p)=>i(A.deepMerge,c,p):A.deepMerge)((l=o[r])!=null?l:{},t!=null?t:{})}getObjAtLocation(e,t){let s=e;for(;t.length>0;){const i=t.shift();s[i]===void 0?s[Number(i)]!==void 0?s=s[Number(i)]:(s[i]={},s=s[i]):s=s[i]}return s}async processTemplates(e,t,s){var v,b,$,m,u,g;if(typeof this.template!="function")return;const i=($=(b=(v=e[`minecraft:${this.fileType}`])==null?void 0:v.description)==null?void 0:b.identifier)!=null?$:"bridge:no_identifier",n=await A.hashString(`${this.name}/${i}`),r=(g=(u=(m=this.projectConfig)==null?void 0:m.get())==null?void 0:u.namespace)!=null?g:"bridge",o=(f,k)=>(this.animations.push([f,k]),this.getShortAnimName("a",n,this.animations.length-1)),l=(f,k)=>(this.animationControllers.push([f,k]),this.getShortAnimName("ac",n,this.animationControllers.length-1)),c=f=>{const k=`loot_tables/bridge/${this.getShortAnimName("lt",n,this.serverFiles.length)}.json`;return this.serverFiles.push([k,f]),k},p=f=>{const k=`trading/bridge/${this.getShortAnimName("tt",n,this.serverFiles.length)}.json`;return this.serverFiles.push([k,f]),k},w=f=>{this.serverFiles.push([`recipes/bridge/${this.getShortAnimName("recipe",n,this.serverFiles.length)}.json`,f])},d=f=>{this.serverFiles.push([`spawn_rules/bridge/${this.getShortAnimName("sr",n,this.serverFiles.length)}.json`,f])},y=(await A.hashString(`${this.name}/${s}`)).slice(0,16),h=f=>this.registerLifecycleHook(e,s,f,y,"activated"),F=f=>this.registerLifecycleHook(e,s,f,y,"deactivated");this.fileType==="entity"?this.template(t!=null?t:{},{mode:this.mode,compilerMode:this.mode,sourceEntity:()=>JSON.parse(JSON.stringify(e)),create:(f,k,S)=>this.create(e,f,k,S),location:s,identifier:i,projectNamespace:r,animationController:l,animation:o,lootTable:c,tradeTable:p,spawnRule:d,dialogueScene:!this.targetVersion||de(this.targetVersion,"1.17.10",">=")?(f,k=!0)=>{this.dialogueScenes[n]||(this.dialogueScenes[n]=[]),this.dialogueScenes[n].push(f),f.scene_tag&&k&&h({run_command:{command:[`/dialogue open @s @p ${f.scene_tag}`]}})}:void 0,onActivated:h,onDeactivated:F,client:{create:(f,k="1.10.0")=>{this.clientFiles[`entity/bridge/${n}.json`]={format_version:k,"minecraft:client_entity":Object.assign({description:{identifier:i}},f)}}}}):this.fileType==="item"?this.template(t!=null?t:{},{mode:this.mode,compilerMode:this.mode,sourceItem:()=>JSON.parse(JSON.stringify(e)),create:(f,k,S)=>this.create(e,f,k,S),location:s,identifier:i,projectNamespace:r,lootTable:c,recipe:w,player:{animationController:l,animation:o,create:(f,k,S)=>this.createOnPlayer.push([k!=null?k:"minecraft:entity",f,S])}}):this.fileType==="block"&&this.template(t!=null?t:{},{mode:this.mode,compilerMode:this.mode,sourceBlock:()=>JSON.parse(JSON.stringify(e)),create:(f,k,S)=>this.create(e,f,k,S),lootTable:c,recipe:w,location:s,identifier:i,projectNamespace:r})}async processAdditionalFiles(e,t){var c,p,w,d,y,h;const s=(p=(c=this.projectConfig)==null?void 0:c.getRelativePackRoot("behaviorPack"))!=null?p:"BP",i=(w=this.projectConfig)==null?void 0:w.getRelativePackRoot("resourcePack"),n=(h=(y=(d=t[`minecraft:${this.fileType}`])==null?void 0:d.description)==null?void 0:y.identifier)!=null?h:"bridge:no_identifier",r=await A.hashString(`${this.name}/${n}`),o=`${s}/animations/bridge/${r}.json`,l=`${s}/animation_controllers/bridge/${r}.json`;return n==="minecraft:player"&&this.createOnPlayer.forEach(([F,v,b])=>{this.create(t,v,F,b)}),i||(this.clientFiles={},this.console.error(`[${this.name}] Dash was unable to load the root of your resource pack and therefore cannot generate client files for this component.`)),{[o]:{baseFile:e,fileContent:this.createAnimations(r,t)},[l]:{baseFile:e,fileContent:this.createAnimationControllers(r,t)},[j.join(s,`dialogue/bridge/${r}.json`)]:this.dialogueScenes[r]&&this.dialogueScenes[r].length>0?{baseFile:e,fileContent:JSON.stringify({format_version:this.targetVersion,"minecraft:npc_dialogue":{scenes:this.dialogueScenes[r]}},null,"	")}:void 0,...Object.fromEntries(this.serverFiles.map(([F,v])=>[j.join(s,F),{baseFile:e,fileContent:JSON.stringify(v,null,"	")}])),...Object.fromEntries(Object.entries(this.clientFiles).map(([F,v])=>[j.join(i,F),{baseFile:e,fileContent:JSON.stringify(v,null,"	")}]))}}createAnimations(e,t){if(this.animations.length===0)return;let s=0;const i={format_version:"1.10.0",animations:{}};for(const[n,r]of this.animations){if(!n){s++;continue}const o=this.getAnimName("animation",e,s),l=this.getShortAnimName("a",e,s);i.animations[o]=n,this.create(t,{animations:{[l]:o}},"minecraft:entity/description"),r!==!1&&this.create(t,{scripts:{animate:[r?{[l]:r}:l]}},"minecraft:entity/description"),s++}return JSON.stringify(i,null,"	")}createAnimationControllers(e,t){if(this.animationControllers.length===0)return;let s=0;const i={format_version:"1.10.0",animation_controllers:{}};for(const[n,r]of this.animationControllers){if(!n){s++;continue}const o=this.getAnimName("controller.animation",e,s),l=this.getShortAnimName("ac",e,s);i.animation_controllers[o]=n,this.create(t,{animations:{[l]:o}},"minecraft:entity/description"),r!==!1&&this.create(t,{scripts:{animate:[r?{[l]:r}:l]}},"minecraft:entity/description"),s++}return JSON.stringify(i,null,"	")}getAnimName(e,t,s){return`${e}.${t}_${s}`}getShortAnimName(e,t,s){var i;return`${(i=t.slice(0,16))!=null?i:"bridge_auto"}_${e}_${s}`}registerLifecycleHook(e,t,s,i,n){e[`minecraft:${this.fileType}`].events||(e[`minecraft:${this.fileType}`].events={});const r=e[`minecraft:${this.fileType}`].events;if(n==="activated"&&t===`minecraft:${this.fileType}/components`)r["minecraft:entity_spawned"]||(r["minecraft:entity_spawned"]={}),this.addEventReponse(r["minecraft:entity_spawned"],s);else if(this.fileType==="entity"&&t.startsWith(`minecraft:${this.fileType}/component_groups/`)){const o=t.split("/").pop();this.findComponentGroupReferences(r,n==="activated"?"add":"remove",o).forEach(c=>this.addEventReponse(c,s))}else if(t.startsWith(`minecraft:${this.fileType}/permutations/`)){const o=t.split("/");if(o.pop()!=="components")throw new Error("Invalid component location inside of permutation");const l=this.getObjAtLocation(e,[...o]),c=`bridge:${i}_${n}_${n==="activated"?this.lifecycleHookCount.activated++:this.lifecycleHookCount.deactivated++}`;l.condition&&this.animationControllers.push([{states:{default:{on_entry:[`@s ${c}`]}}},n==="activated"?l.condition:`!(${l.condition})`]),r[c]=s}}addEventReponse(e,t){if(Array.isArray(e.sequence))e.sequence.push(t);else if(Object.keys(e).length===0)Object.assign(e,t);else{let s=Object.assign({},e,{filters:void 0});for(const i in e)i!=="filters"&&(e[i]=void 0);e.sequence=[s,t]}}findComponentGroupReferences(e,t,s){var n,r;let i=[];for(const o in e){const l=e[o];Array.isArray(l.sequence)?i.push(...this.findComponentGroupReferences(l.sequence,t,s)):Array.isArray(l.randomize)?i.push(...this.findComponentGroupReferences(l.randomize,t,s)):((r=(n=l[t])==null?void 0:n.component_groups)!=null?r:[]).includes(s)&&i.push(l)}return i}}function we(a){const e=[];for(const[t,s]of a)e.push(...Fe(s,t));return e}function Fe(a,e){const t=[];for(const s in a)s.startsWith("minecraft:")||s.startsWith("tag:")||t.push([s,e]);return t}function N({fileType:a,getComponentObjects:e}){const t=new Map;let s={};return({console:i,projectConfig:n,projectRoot:r,compileFiles:o,getAliases:l,options:c,jsRuntime:p,targetVersion:w,fileType:d})=>{let y=null;const h=(m,u)=>{if(!m)return!1;if(y&&m===y)return!0;const g=a==="item"&&(d==null?void 0:d.getId(m))==="entity"&&u(m).includes("minecraft:player");return g&&(y=m),g},F=new Map,v=m=>{if(!m)return!1;if(F.has(m))return F.get(m);const u=c.v1CompatMode?m.includes("/components/"):(d==null?void 0:d.getId(m))==="customComponent"&&m.includes(`/${a}/`);return F.set(m,u),u},b=new Map,$=m=>{if(!m)return!1;if(b.has(m))return b.get(m);const u=(d==null?void 0:d.getId(m))===a;return b.set(m,u),u};return{buildStart(){t.clear(),F.clear(),b.clear(),y=null,s={}},ignore(m){return!s[m]&&!v(m)&&!$(m)&&!h(m,l)},transformPath(m){if(v(m)&&c.buildType!=="fileRequest")return null},async read(m,u){if(!u)return s[m]?H.default.parse(s[m].fileContent):void 0;if(v(m)&&m.endsWith(".js")){const g=await u.getFile();return await(g==null?void 0:g.text())}else if($(m)||h(m,l)){const g=await u.getFile();if(!g)return;try{return H.default.parse(await g.text())}catch(f){return c.buildType!=="fileRequest"&&i.error(`Error within file "${m}": ${f}`),{__error__:`Failed to load original file: ${f}`}}}},async load(m,u){if(v(m)&&typeof u=="string"){const g=new Q(i,a,u,c.mode,!!c.v1CompatMode,w);return g.setProjectConfig(n),await g.load(p,m)?g:u}},async registerAliases(m,u){if(v(m))return[`${a}Component#${u.name}`]},async require(m,u){if(h(m,l))return[`.${n.getRelativePackRoot("behaviorPack")}/components/item/**/*.[jt]s`,`.${n.getRelativePackRoot("behaviorPack")}/items/**/*.json`];if($(m)){const g=we(e(u));return t.set(m,g),g.map(f=>`${a}Component#${f[0]}`)}else if(s[m])return[s[m].baseFile]},async transform(m,u,g={}){var f;if(h(m,l)){const k=Object.entries(g).filter(([S])=>S.startsWith("itemComponent#")).map(([S,C])=>C);for(const S of k){if(!S)return;s=A.deepMerge(s,await S.processAdditionalFiles(m,u))}}else if($(m)){const k=new Set;for(const[S,C]of(f=t.get(m))!=null?f:[]){const I=g[`${a}Component#${S}`];if(!I)continue;const W=A.get(u,C.split("/"),{}),J=W[S];delete W[S],await I.processTemplates(u,J,C),k.add(I)}for(const S of k)s=A.deepMerge(s,await S.processAdditionalFiles(m,u));for(const S of k)S.reset()}},finalizeBuild(m,u){if(v(m)&&u)return u.toString();if($(m)||s[m])return JSON.stringify(u,null,"	")},async buildEnd(){if(c.buildType==="fileRequest")return;s=Object.fromEntries(Object.entries(s).filter(([u,g])=>(g==null?void 0:g.fileContent)!==void 0).map(([u,g])=>[j.join(r,u),g]));const m=Object.keys(s);m.length>0&&await o(m),s={}}}}}const ke=N({fileType:"entity",getComponentObjects:a=>{var e,t,s,i,n,r;return[["minecraft:entity/components",(t=(e=a==null?void 0:a["minecraft:entity"])==null?void 0:e.components)!=null?t:{}],...Object.entries((i=(s=a==null?void 0:a["minecraft:entity"])==null?void 0:s.component_groups)!=null?i:{}).map(([o,l])=>[`minecraft:entity/component_groups/${o}`,l]),...((r=(n=a==null?void 0:a["minecraft:entity"])==null?void 0:n.permutations)!=null?r:[]).map((o,l)=>{var c;return[`minecraft:entity/permutations/${l}/components`,(c=o==null?void 0:o.components)!=null?c:{}]})]}}),ve=N({fileType:"item",getComponentObjects:a=>{var e,t;return[["minecraft:item/components",(t=(e=a==null?void 0:a["minecraft:item"])==null?void 0:e.components)!=null?t:{}]]}}),be=N({fileType:"block",getComponentObjects:a=>{var e,t,s,i;return[["minecraft:block/components",(t=(e=a==null?void 0:a["minecraft:block"])==null?void 0:e.components)!=null?t:{}],...((i=(s=a==null?void 0:a["minecraft:block"])==null?void 0:s.permutations)!=null?i:[]).map((n,r)=>{var o;return[`minecraft:block/permutations/${r}/components`,(o=n.components)!=null?o:{}]})]}});function x(a,e,t,s=0){const i=[];for(const n of a){if(!n.startsWith("/")){i.push(n);continue}const[r,...o]=A.tokenizeCommand(n.slice(1)).tokens.map(({word:c})=>c),l=e[`command#${r}`];if(r==="execute"){let c=4;if(o[c]==="detect"&&(c+=6),o[c]===void 0){i.push(n);continue}const[p,...w]=o.slice(c),d=e[`command#${p}`];if(!(d instanceof E)){i.push(n);continue}i.push(...d.process(`${p} ${w.join(" ")}`,e,s+1).map(y=>y.startsWith("/")?`/execute ${o.slice(0,c).join(" ")} ${y.slice(1)}`:y));continue}else if(!(l instanceof E)){i.push(n);continue}i.push(...l.process(n,e,s))}return i.filter(n=>t||!n.startsWith("#")).map(n=>n.trim())}const $e=a=>({register:e=>{a.command=({name:t,schema:s,template:i})=>{t(e.command_name),s([]),i(n=>new e().onApply(n))}}});class E{constructor(e,t,s,i){this.console=e,this.commandSrc=t,this.mode=s,this.v1Compat=i}get name(){var e;return(e=this._name)!=null?e:"unknown"}async load(e,t,s){const i={command:null},n=await e.run(t,{console:this.console,defineCommand:c=>c,Bridge:this.v1Compat?$e(i):void 0}).catch(c=>(this.console.error(`Failed to execute command ${this.name}: ${c}`),null));if(!n)return null;if(typeof n.__default__!="function")if(i.command)n.__default__=i.command;else return this.console.error(`Component ${t} is not a valid component. Expected a function as the default export.`),!1;const r=c=>this._name=c;let o=c=>this.schema=c,l=()=>{};(!s||s==="server")&&(o=()=>{},l=c=>{this.template=(p,w)=>{try{return c(p,w)}catch(d){return this.console.error(d),[]}}}),await n.__default__({name:r,schema:o,template:l})}process(e,t,s){var l;e.startsWith("/")&&(e=e.slice(1));const[i,...n]=A.tokenizeCommand(e).tokens.map(({word:c})=>c),r=(l=this.template)==null?void 0:l.call(this,n.map(c=>A.castType(c)),{compilerMode:this.mode,commandNestingDepth:s,compileCommands:c=>x(c.map(p=>p.startsWith("/")?p:`/${p}`),t,!1,s+1).map(p=>p.startsWith("/")?p.slice(1):p)});let o=[];if(typeof r=="string")o=r.split(`
`);else if(Array.isArray(r))o=r.filter(c=>typeof c=="string");else{const c=`Failed to process command ${this._name}; Invalid command template return type: Expected string[] or string, received ${typeof r}`;this.console.error(c),o.push(`# ${c}`)}return o.map(c=>c.startsWith("/")||c.startsWith("#")?c:`/${c}`)}getSchema(){if(this.schema){if(Array.isArray(this.schema))return this.schema.length===0?[{commandName:this.name}]:this.schema.map(e=>({commandName:this.name,...e}))}else return[{commandName:this.name}];return this.schema.commandName||(this.schema.commandName=this.name),[this.schema]}toString(){return this.commandSrc}}const Se=({projectConfig:a,jsRuntime:e,console:t,fileType:s,requestJsonData:i,options:n})=>{const r=(d,y)=>a.resolvePackPath(d,y),o=d=>d&&s.getId(d)==="customCommand",l=d=>d&&s.getId(d)==="function",c=new Map,p=d=>{if(c.has(d))return c.get(d);const y=n.include[s.getId(d)];return c.set(d,y),y},w=d=>{var y,h,F;return(F=(h=(y=s.get(d))==null?void 0:y.meta)==null?void 0:h.commandsUseSlash)!=null?F:!1};return{async buildStart(){n.include=Object.assign(await i("data/packages/minecraftBedrock/location/validCommand.json"),n.include),c.clear()},ignore(d){return!o(d)&&!l(d)&&!p(d)},transformPath(d){if(o(d)&&n.buildType!=="fileRequest")return null},async read(d,y){if(!!y){if(o(d)&&d.endsWith(".js")){const h=await y.getFile();return await(h==null?void 0:h.text())}else if(l(d)){const h=await y.getFile();return await(h==null?void 0:h.text())}else if(p(d)&&y){const h=await y.getFile();if(!h)return;try{return H.default.parse(await h.text())}catch(F){t.error(F)}}}},async load(d,y){var h;if(o(d)){const F=new E(t,y,n.mode,(h=n.v1CompatMode)!=null?h:!1);return await F.load(e,d),F}},async registerAliases(d,y){if(o(d))return[`command#${y.name}`]},async require(d){if(p(d)||l(d))return[r("behaviorPack","commands/**/*.[jt]s"),r("behaviorPack","commands/*.[jt]s")]},async transform(d,y,h={}){const F=p(d);if(F&&F.length>0){const v=w(d);F.forEach(b=>A.setObjectAt(b,y,$=>{if(!$)return $;$=Array.isArray($)?$:[$];const m=[];for(const u of $){if(typeof u=="string"){m.push(u);continue}t.error(`The file "${d}" contains invalid commands. Expected type "string" within array but got type "${typeof u}"`)}return x(m.map(u=>!v&&!u.startsWith("/")?`/${u}`:u),h,!1).map(u=>v?u:u.slice(1))}))}else if(l(d)){const v=y.split(`
`).map(b=>b.trim()).filter(b=>b!==""&&!b.startsWith("#")).map(b=>`/${b}`);return x(v,h,!0).map(b=>b.startsWith("/")?b.slice(1):b).join(`
`)}},finalizeBuild(d,y){if(o(d)&&y)return y.toString();if(p(d)&&typeof y!="string")return JSON.stringify(y,null,"	")}}},je=({options:a})=>({ignore(e){return!e.endsWith(".ts")},async transformPath(e){if(!!(e!=null&&e.endsWith(".ts")))return`${e.slice(0,-3)}.js`},async read(e,t){if(!e.endsWith(".ts")||!t)return;const s=await t.getFile();return await(s==null?void 0:s.text())},async load(e,t){if(!!e.endsWith(".ts"))return await R.loadedWasm,ie.transformSync(t,{filename:j.basename(e),sourceMaps:a!=null&&a.inlineSourceMap?"inline":void 0,jsc:{parser:{syntax:"typescript",preserveAllComments:!1,topLevelAwait:!0},target:"es2020"}}).code},finalizeBuild(e,t){if(e.endsWith(".ts")&&typeof t=="string")return t}}),_e=({options:a,outputFileSystem:e,projectRoot:t,packType:s,fileType:i,console:n})=>{a.packName||(a.packName="bridge project");const r=p=>p.split(/\\|\//g).filter(w=>w!==".."&&w!==".").slice(1).join("/"),o=p=>{const w=s.getId(p),d=j.relative(t,p);if(w==="behaviorPack"||w==="resourcePack"||w==="skinPack")return j.join(t,"builds/dist",w,r(d))},l=p=>{const w=s.getId(p),d=j.relative(t,p);if(w==="worldTemplate")return j.join(t,"builds/dist",r(d));if(w==="behaviorPack"||w==="resourcePack")return j.join(t,"builds/dist",w==="behaviorPack"?"behavior_packs":"resource_packs",a.packName,r(d))},c=p=>i.getId(p)==="worldManifest"?null:l(p);return{async buildStart(){await e.unlink(`${t}/builds/dist`).catch(()=>{})},transformPath(p){if(!!p)switch(a.format){case"mcaddon":return o(p);case"mcworld":return c(p);case"mctemplate":return l(p);default:n.error(`Unknown packaging format: ${a.format}`)}}}},Ae=({projectConfig:a,packType:e,options:t})=>{const s=Object.keys(a.getAvailablePacks()),i=Object.fromEntries(s.map(r=>[r,[]])),n=r=>{const o=e.getId(r);if(o!=="unknown")return[o,a.resolvePackPath(o,"contents.json")]};return t.buildType!=="fullBuild"?{}:{include(){return s.map(r=>[a.resolvePackPath(r,"contents.json"),{isVirtual:!0}])},read(r){const o=n(r);if(!o)return;const[l,c]=o;if(r!==c)return i[l]},transformPath(r){if(!r)return;const o=e.getId(r);o!=="unknown"&&i[o].push(r)},finalizeBuild(r){const o=n(r);if(!o)return;const[l,c]=o;if(r!==c)return JSON.stringify(i[l])}}},Ce=({fileType:a})=>{const e=[];for(const s of a.all)s.formatVersionMap&&e.push(s.id);const t=s=>s&&e.includes(a.getId(s));return{ignore(s){return!t(s)},async read(s,i){if(!!i&&t(s)){const n=await i.getFile();if(!n)return;try{return H.default.parse(await n.text())}catch(r){console.error(r)}}},load(s,i){if(t(s))return i},transform(s,i){if(t(s)){const n=a.get(s),r=n==null?void 0:n.formatVersionMap;if(!r)return;const o=i==null?void 0:i.format_version;return o&&r[o]&&(i.format_version=r[o]),i}},finalizeBuild(s,i){if(t(s))return JSON.stringify(i)}}};class D{constructor(e,t){this.console=e,this.baseDir=t,this.files=new Map}get hasFiles(){return this.files.size>0}getAll(){return[...this.files.entries()]}get(e){return this.files.get(e)}clear(){this.files.clear()}add(e,t){const s=this.baseDir?j.join(this.baseDir,e):e;if(this.files.has(s)){this.console.warn(`Omitting file "${s}" from collection because it would overwrite a previously generated file!`);return}this.files.set(s,t)}has(e){return this.files.has(e)}addFrom(e){for(const[t,s]of e.getAll())this.add(t,s)}}function Ie({generatorPath:a,omitUsedTemplates:e,fileSystem:t,console:s}){return{useTemplate:(i,{omitTemplate:n=!0}={})=>{const r=j.join(j.dirname(a),i);return n&&e.add(r),i.endsWith(".json")?t.readJson(r):t.readFile(r).then(o=>o.text())},createCollection:()=>new D(s,j.dirname(a))}}const He=({options:a,fileType:e,console:t,jsRuntime:s,fileSystem:i,compileFiles:n,getFileMetadata:r,unlinkOutputFiles:o,addFileDependencies:l})=>{var m;const c=new Set(["gameTest","customCommand","customComponent","molangAstScript",...(m=a.ignoredFileTypes)!=null?m:[]]),p=u=>e.getId(u),w=u=>{var f;const g=e.get(u,void 0,!1);return g?(f=g.type)!=null?f:"json":"raw"},d=u=>!c.has(p(u))&&(u.endsWith(".js")||u.endsWith(".ts")),y=u=>{var f,k,S,C;return w(u)==="json"?".json":(C=(S=(k=(f=e.get(u,void 0,!1))==null?void 0:f.detect)==null?void 0:k.fileExtensions)==null?void 0:S[0])!=null?C:".txt"},h=u=>u.replace(/\.(js|ts)$/,y(u)),F=new Set,v=new D(t),b=new Set,$=new Map;return{buildStart(){v.clear(),F.clear(),b.clear(),$.clear()},ignore(u){return!d(u)&&!F.has(u)&&!v.has(u)},transformPath(u){if(u&&d(u))return h(u)},async read(u,g){if(d(u)&&g){const k=await g.getFile();return k?k.text():void 0}const f=v.get(u);if(f)return f},async load(u,g){var f,k;if(d(u)){if(!g)return null;const S=new Set;s.registerModule("@bridge/generate",Ie({generatorPath:u,fileSystem:i,omitUsedTemplates:S,console:t}));const C=await s.run(u,{console:t},g).catch(M=>(t.error(`Failed to execute generator script "${u}": ${M}`),null));if(!C)return null;if(!C.__default__)return t.error(`Expected generator script "${u}" to provide file content as default export!`),null;const I=r(u);((f=I.get("unlinkedFiles"))!=null?f:[]).filter(M=>!S.has(M)).forEach(M=>b.add(M)),I.set("unlinkedFiles",[...S]);const J=(k=I.get("generatedFiles"))!=null?k:[];return await o([...J,...S]).catch(()=>{}),$.set(u,S),C.__default__}},require(u){const g=$.get(u);if(g)return[...g]},finalizeBuild(u,g){if(v.get(u))return u.endsWith(".json")&&typeof g!="string"?JSON.stringify(g,null,"	"):g;if(F.has(u))return null;if(d(u)){if(g===null)return null;const f=r(u);return g instanceof D?(v.addFrom(g),f.set("generatedFiles",g.getAll().map(([k])=>k)),null):(f.set("generatedFiles",[h(u)]),typeof g=="object"?JSON.stringify(g):g)}},async buildEnd(){s.deleteModule("@bridge/generate"),b.size>0&&await n([...b].filter(u=>!v.has(u)),!1),v.hasFiles&&await n(v.getAll().map(([u])=>u))},async beforeFileUnlinked(u){var g,f;if(d(u)){let k=null;try{k=r(u)}catch{}if(!k)return;const S=(g=k.get("unlinkedFiles"))!=null?g:[],C=(f=k.get("generatedFiles"))!=null?f:[];await o(C),await n(S)}}}};class Y extends R.Runtime{constructor(e,t){super(t),this.fs=e}readFile(e){return this.fs.readFile(e).then(t=>t.text())}deleteModule(e){this.baseModules.delete(e)}}const Z={simpleRewrite:le,rewriteForPackaging:_e,moLang:z,molang:z,entityIdentifierAlias:ce,customEntityComponents:ke,customItemComponents:ve,customBlockComponents:be,customCommands:Se,typeScript:je,contentsFile:Ae,formatVersionCorrection:Ce,generatorScripts:He},Te=["buildStart","buildEnd","include","ignore","transformPath","read","load","registerAliases","require","transform","finalizeBuild","beforeFileUnlinked"];class Oe{constructor(e){this.dash=e,this.implementedHooks=new Map,this.pluginRuntime=new Y(this.dash.fileSystem)}pluginsFor(e,t){var s,i;return t?(s=t.myImplementedHooks.get(e))!=null?s:[]:(i=this.implementedHooks.get(e))!=null?i:[]}getImplementedHooks(){return this.implementedHooks}async loadPlugins(e={}){var n,r;this.implementedHooks.clear(),this.pluginRuntime.clearCache();const t=[...(await this.dash.fileSystem.readdir(j.join(this.dash.projectRoot,".bridge/extensions")).catch(()=>[])).map(o=>o.kind==="directory"?j.join(this.dash.projectRoot,".bridge/extensions",o.name):void 0),...(await this.dash.fileSystem.readdir("extensions").catch(()=>[])).map(o=>o.kind==="directory"?j.join("extensions",o.name):void 0)],s={};for(const o of t){if(!o)continue;let l;try{l=await this.dash.fileSystem.readJson(j.join(o,"manifest.json"))}catch{continue}if(!!((n=l==null?void 0:l.compiler)!=null&&n.plugins))for(const c in l.compiler.plugins)s[c]=j.join(o,l.compiler.plugins[c])}const i=(r=(await this.getCompilerOptions()).plugins)!=null?r:[];for(const o of i){const l=typeof o=="string"?o:o[0],c=typeof o=="string"?{}:o[1];if(s[l]){const p=await this.pluginRuntime.run(s[l],{console:this.dash.console,...e}).catch(w=>(this.dash.console.error(`Failed to execute plugin ${l}: ${w}`),null));if(!p)continue;typeof p.__default__=="function"?await this.addPlugin(l,p.__default__,c):this.dash.console.error(`Plugin ${l} is invalid: It does not provide a function as a default export.`)}else Z[l]?await this.addPlugin(l,Z[l],c):this.dash.console.error(`Unknown compiler plugin: ${l}`)}}async addPlugin(e,t,s){const i=new oe(this.dash,e,t(await this.getPluginContext(e,s)));for(const n of Te)if(i.implementsHook(n)){let r=this.implementedHooks.get(n);r||(r=[],this.implementedHooks.set(n,r)),r.push(i)}}async getCompilerOptions(){var t;const e=await this.dash.getCompilerConfigPath();return e?await this.dash.fileSystem.readJson(e):(t=this.dash.projectConfig.get().compiler)!=null?t:{}}async getPluginContext(e,t={}){const s=this.dash;return{options:{get mode(){return s.getMode()},get buildType(){return s.buildType},...t},jsRuntime:this.dash.jsRuntime,console:this.dash.console,fileSystem:this.dash.fileSystem,outputFileSystem:this.dash.outputFileSystem,projectConfig:this.dash.projectConfig,projectRoot:this.dash.projectRoot,packType:this.dash.packType,fileType:this.dash.fileType,targetVersion:this.dash.projectConfig.get().targetVersion,requestJsonData:this.dash.requestJsonData,getAliases:i=>{var n,r;return[...(r=(n=this.dash.includedFiles.get(i))==null?void 0:n.aliases)!=null?r:[]]},getFileMetadata:i=>{const n=this.dash.includedFiles.get(i);if(!n)throw new Error(`File ${i} to get metadata from not found`);return{get(r){return n.getMetadata(r)},set(r,o){n.addMetadata(r,o)},delete(r){n.deleteMetadata(r)}}},addFileDependencies:(i,n,r=!1)=>{const o=this.dash.includedFiles.get(i);if(!o)throw new Error(`File ${i} to add dependency to not found`);r?o.setRequiredFiles(new Set(n)):n.forEach(l=>o.addRequiredFile(l))},getOutputPath:i=>this.dash.getCompilerOutputPath(i),unlinkOutputFiles:i=>this.dash.unlinkMultiple(i,!1,!0),hasComMojangDirectory:this.dash.fileSystem!==this.dash.outputFileSystem,compileFiles:(i,n=!0)=>this.dash.compileAdditionalFiles(i,n)}}async runBuildStartHooks(){await Promise.all(this.pluginsFor("buildStart").map(e=>e.runBuildStartHook()))}async runIncludeHooks(){let e=[];for(const t of this.pluginsFor("include")){const s=await t.runIncludeHook();Array.isArray(s)&&e.push(...s)}return e}async runIgnoreHooks(e){for(const t of this.pluginsFor("ignore"))await t.runIgnoreHook(e.filePath)&&e.addIgnoredPlugin(t.pluginId);e.createImplementedHooksMap()}async runTransformPathHooks(e){let t=e.filePath;for(const s of this.pluginsFor("transformPath")){const i=await s.runTransformPathHook(t);if(i===null)return null;i!==void 0&&(t=i)}return t}async runReadHooks(e){for(const t of this.pluginsFor("read",e)){const s=await t.runReadHook(e.filePath,e.fileHandle);if(s!=null)return s}}async runLoadHooks(e){let t=e.data;for(const s of this.pluginsFor("load",e)){const i=await s.runLoadHook(e.filePath,t);i!==void 0&&(t=i)}return t}async runRegisterAliasesHooks(e){const t=new Set;for(const s of this.pluginsFor("registerAliases",e)){const i=await s.runRegisterAliasesHook(e.filePath,e.data);i!=null&&(Array.isArray(i)?i.forEach(n=>t.add(n)):t.add(i))}return t}async runRequireHooks(e){const t=new Set;for(const s of this.pluginsFor("require",e)){const i=await s.runRequireHook(e.filePath,e.data);i!=null&&(Array.isArray(i)?i.forEach(n=>t.add(n)):t.add(i))}return t}async runTransformHooks(e){const t=Object.fromEntries([...e.requiredFiles].map(i=>this.dash.includedFiles.query(i)).flat().map(i=>[[i.filePath,i.data],...[...i.aliases].map(n=>[n,i.data])]).flat());let s=e.data;for(const i of this.pluginsFor("transform",e)){const n=await i.runTransformHook(e.filePath,s,t);n!==void 0&&(s=n)}return s}async runFinalizeBuildHooks(e){for(const t of this.pluginsFor("finalizeBuild",e)){const s=await t.runFinalizeBuildHook(e.filePath,e.data);if(s!==void 0)return s}}async runBuildEndHooks(){await Promise.allSettled(this.pluginsFor("buildEnd").map(e=>e.runBuildEndHook()))}async runBeforeFileUnlinked(e){for(const t of this.pluginsFor("beforeFileUnlinked"))await t.runBeforeFileUnlinked(e)}}class q{constructor(e,t,s=!1){this.dash=e,this.filePath=t,this.isVirtual=s,this.isDone=!1,this.requiredFiles=new Set,this.aliases=new Set,this.updateFiles=new Set,this.metadata=new Map,this.ignoredByPlugins=new Set,this._myImplementedHooks=null,this._cachedFile=null,this.outputPath=t,this.isVirtual||this.setDefaultFileHandle()}isIgnoredBy(e){return this.ignoredByPlugins.has(e)}addIgnoredPlugin(e){this.ignoredByPlugins.add(e)}createImplementedHooksMap(){var s;this._myImplementedHooks=new Map;for(const[i,n]of this.dash.plugins.getImplementedHooks()){const r=n.filter(o=>!this.isIgnoredBy(o.pluginId));this._myImplementedHooks.set(i,r)}((s=this.myImplementedHooks.get("read"))!=null?s:[]).length>0&&(this._cachedFile=this.dash.fileSystem.readFile(this.filePath).catch(()=>null))}get myImplementedHooks(){if(this._myImplementedHooks)return this._myImplementedHooks;throw new Error("Tried to access implemented hooks before they were created")}setFileHandle(e){this.fileHandle=e}setDefaultFileHandle(){this.setFileHandle({getFile:()=>this._cachedFile})}setOutputPath(e){this.outputPath=e}setReadData(e){this.data=e}setAliases(e){for(const t of e)this.dash.includedFiles.addAlias(t,this);this.aliases=e}setRequiredFiles(e){this.requiredFiles=e}addRequiredFile(e){this.requiredFiles.add(e)}setUpdateFiles(e){this.updateFiles=new Set(e.map(t=>this.dash.includedFiles.get(t)).filter(t=>t!==void 0))}addUpdateFile(e){this.updateFiles.add(e)}removeUpdateFile(e){this.updateFiles.delete(e)}setMetadata(e){typeof e=="object"&&(this.metadata=new Map(Object.entries(e)))}addMetadata(e,t){this.metadata.set(e,t)}deleteMetadata(e){this.metadata.delete(e)}getMetadata(e){return this.metadata.get(e)}getAllMetadata(){return Object.fromEntries(this.metadata.entries())}getHotUpdateChain(){const e=new Set([this]);for(const t of this.updateFiles)t.getHotUpdateChain().forEach(s=>{e.add(s)});return e}filesToLoadForHotUpdate(e=new Set,t=!0){const s=new Set;if(e.has(this))return s;e.add(this);for(const i of this.requiredFiles){const n=this.dash.includedFiles.query(i);for(const r of n)r.filesToLoadForHotUpdate(e,!1).forEach(o=>{s.add(o)})}if(s.add(this),t)for(const i of this.updateFiles)i.filesToLoadForHotUpdate(e,!0).forEach(n=>{s.add(n)});return s}processAfterLoad(e,t){(this.data===null||this.data===void 0)&&(this.isDone=!0,this.filePath!==this.outputPath&&this.outputPath!==null&&!this.isVirtual&&e&&t.push(this.dash.fileSystem.copyFile(this.filePath,this.outputPath,this.dash.outputFileSystem)))}serialize(){return{isVirtual:this.isVirtual,filePath:this.filePath,aliases:[...this.aliases],requiredFiles:[...this.requiredFiles],updateFiles:[...this.updateFiles].map(e=>e.filePath),metadata:this.metadata.size>0?Object.fromEntries(this.metadata.entries()):void 0}}reset(){this.isDone=!1,this.data=null,this._myImplementedHooks=null,this._cachedFile=null,this.isVirtual||this.setDefaultFileHandle()}}class Me{constructor(e){this.dash=e,this.files=new Map,this.aliases=new Map,this.queryCache=new Map}all(){return[...this.files.values()]}filtered(e){return this.all().filter(t=>e(t))}get(e){var t;return(t=this.aliases.get(e))!=null?t:this.files.get(e)}getFromFilePath(e){return this.files.get(e)}query(e){const t=this.aliases.get(e);if(t)return[t];const s=this.files.get(e);return s?[s]:re.default(e)?this.queryGlob(e):[]}addAlias(e,t){this.aliases.set(e,t)}queryGlob(e){if(this.queryCache.has(e))return this.queryCache.get(e);const t=this.filtered(s=>A.isMatch(s.filePath,e));return this.queryCache.set(e,t),t}async loadAll(){this.dash.console.time("Load all files"),this.queryCache=new Map;const e=new Set,t=this.dash.projectConfig.getAvailablePackPaths(),s=[];for(const n of t)s.push(this.dash.fileSystem.allFiles(n).catch(r=>(this.dash.console.warn(r),[])).then(r=>{for(const o of r)e.add(o)}));await Promise.all(s);const i=await this.dash.plugins.runIncludeHooks();for(const n of i)typeof n=="string"?e.add(n):this.addOne(n[0],n[1].isVirtual);this.add([...e]),this.dash.console.timeEnd("Load all files")}addOne(e,t=!1){const s=new q(this.dash,e,t);return this.files.set(e,s),s}add(e,t=!1){let s=[];for(const i of e){const n=this.files.get(i);if(n){s.push(n);continue}s.push(new q(this.dash,i,t)),this.files.set(i,s[s.length-1])}return s}remove(e){const t=this.files.get(e);if(!!t){this.files.delete(e);for(const s of t.aliases)this.aliases.delete(s)}}async save(e){await this.dash.fileSystem.writeJson(e,this.all().map(t=>t.serialize()))}async load(e){this.removeAll();const t=await this.dash.fileSystem.readJson(e).catch(()=>null),s=[];if(!!t){for(const i of t){const n=new q(this.dash,i.filePath,i.isVirtual);n.setAliases(new Set(i.aliases)),n.setRequiredFiles(new Set(i.requiredFiles)),n.setMetadata(i.metadata),s.push(n);for(const r of i.aliases)this.aliases.set(r,n)}this.files=new Map(s.map(i=>[i.filePath,i]));for(let i=0;i<s.length;i++)s[i].setUpdateFiles(t[i].updateFiles)}}resetAll(){for(const e of this.all())e.reset()}removeAll(){this.files=new Map,this.aliases=new Map,this.queryCache=new Map}}class Ee{constructor(e){this.dash=e,this.copyFilePromises=[]}async run(e,t=!0){this.copyFilePromises=[];let s=[];for(const i of e)i.isDone||s.push(this.loadFile(i,t));await Promise.allSettled(s)}async loadFile(e,t=!0){var l;const[s,i]=await Promise.all([this.dash.plugins.runIgnoreHooks(e),this.dash.plugins.runTransformPathHooks(e)]),n=await this.dash.plugins.runReadHooks(e);if(e.setOutputPath(i),e.setReadData(n),e.processAfterLoad(t,this.copyFilePromises),e.isDone)return;e.setReadData((l=await this.dash.plugins.runLoadHooks(e))!=null?l:e.data);const[r,o]=await Promise.all([this.dash.plugins.runRegisterAliasesHooks(e),this.dash.plugins.runRequireHooks(e)]);e.setAliases(r),e.setRequiredFiles(o)}async awaitAllFilesCopied(){this.copyFilePromises.length!==0&&(await Promise.allSettled(this.copyFilePromises),this.copyFilePromises=[])}}class qe{constructor(e){this.dash=e}run(e){const t=new Set;for(const s of e)s.isDone||t.has(s)||this.resolveSingle(s,t);return t}resolveSingle(e,t,s=new Set){const i=this.dash.includedFiles;s.add(e);for(const n of e.requiredFiles){const r=i.query(n);for(const o of r){if(!o){this.dash.console.error(`Undefined file dependency: "${e.filePath}" requires "${n}"`);continue}if(o.addUpdateFile(e),!t.has(o)){if(s.has(o)){this.dash.console.error(`Circular dependency detected: ${o.filePath} is required by ${e.filePath} but also depends on this file.`);continue}this.resolveSingle(o,t,s)}}}t.add(e),s.delete(e)}}function Re(a){return typeof a=="string"||a instanceof Blob||a instanceof File||a instanceof ArrayBuffer||(a==null?void 0:a.buffer)instanceof ArrayBuffer}class Pe{constructor(e){this.dash=e}async run(e,t=!1){const s=[];for(const i of e){if(i.isDone)continue;let n=await this.transformFile(i,!0,t);n!=null&&i.outputPath&&s.push(this.dash.outputFileSystem.writeFile(i.outputPath,n))}await Promise.allSettled(s)}async transformFile(e,t=!1,s=!1){var n;if(s||(e.data=(n=await this.dash.plugins.runTransformHooks(e))!=null?n:e.data),!t)return e.data;let i=await this.dash.plugins.runFinalizeBuildHooks(e);return i===void 0&&(i=e.data),i!=null&&(Re(i)||(this.dash.console.warn(`File "${e.filePath}" was not in a writable format: "${typeof i}". Trying to JSON.stringify(...) it...`,i),i=JSON.stringify(i))),e.isDone=!0,i}}class Ne{constructor(e=1){this.total=e,this.current=0,this.onChangeCbs=new Set}get percentage(){return this.current/this.total}onChange(e){return this.onChangeCbs.add(e),{dispose:()=>this.onChangeCbs.delete(e)}}setTotal(e){this.total=e,this.current=0,this.onChangeCbs.forEach(t=>t(this))}updateCurrent(e){this.current=e,this.onChangeCbs.forEach(t=>t(this))}advance(){this.current++,this.onChangeCbs.forEach(e=>e(this))}addToTotal(e){this.total+=e,this.onChangeCbs.forEach(t=>t(this))}}class ee{constructor(e=!1){this.verboseLogs=e,this._timers=new Map}time(e){if(!!this.verboseLogs)if(this._timers.has(e)){this.warn(`Timer "${e}" already exists.`);return}else this._timers.set(e,Date.now())}timeEnd(e){if(!this.verboseLogs)return;const t=this._timers.get(e);if(t)this._timers.delete(e),this.log(`${e}: ${Date.now()-t}ms`);else{this.warn(`Timer "${e}" does not exist.`);return}}}class te extends ee{constructor(e){super(e)}log(...e){console.log(...e)}error(...e){console.error(...e)}warn(...e){console.warn(...e)}info(...e){console.info(...e)}}class xe{constructor(e,t,s){var i;this.fileSystem=e,this.options=s,this.progress=new Ne,this.plugins=new Oe(this),this.includedFiles=new Me(this),this.loadFiles=new Ee(this),this.fileOrderResolver=new qe(this),this.fileTransformer=new Pe(this),this.buildType="fullBuild",this.outputFileSystem=t!=null?t:e,this.projectRoot=j.dirname(s.config),this.projectConfig=new ae(e,s.config),this.console=(i=s.console)!=null?i:new te(s.verbose),this.jsRuntime=new Y(this.fileSystem,[["@molang/expressions",O.expressions],["@molang/core",{MoLang:O.MoLang}],["molang",{MoLang:O.MoLang,...O.expressions}],["@bridge/compiler",{mode:s.mode}]]),this.packType=s.packType,this.fileType=s.fileType}getMode(){var e;return(e=this.options.mode)!=null?e:"development"}getCompilerConfigPath(){return this.options.compilerConfig}get requestJsonData(){return this.options.requestJsonData}get dashFilePath(){return j.join(this.projectRoot,`.bridge/.dash.${this.getMode()}.json`)}async setup(e){var t,s,i,n;try{await this.projectConfig.setup()}catch(r){this.console.error("Failed to load project config: "+r)}(t=this.fileType)==null||t.setProjectConfig(this.projectConfig),(s=this.packType)==null||s.setProjectConfig(this.projectConfig),await((i=this.fileType)==null?void 0:i.setup(e)),await((n=this.packType)==null?void 0:n.setup(e)),await this.plugins.loadPlugins(this.options.pluginEnvironment)}async reload(){try{await this.projectConfig.refreshConfig()}catch{}await this.plugins.loadPlugins(this.options.pluginEnvironment)}get isCompilerActivated(){const e=this.projectConfig.get();return e.compiler!==void 0&&Array.isArray(e.compiler.plugins)}async build(){if(this.console.log("Starting compilation..."),!this.isCompilerActivated)return;this.jsRuntime.clearCache(),this.buildType="fullBuild",this.includedFiles.removeAll();const e=Date.now();this.progress.setTotal(7),this.console.time("[HOOK] Build start"),await this.plugins.runBuildStartHooks(),this.console.timeEnd("[HOOK] Build start"),this.progress.advance(),await this.includedFiles.loadAll(),this.progress.advance(),await this.compileIncludedFiles(),this.console.time("[HOOK] Build end"),await this.plugins.runBuildEndHooks(),this.console.timeEnd("[HOOK] Build end"),this.progress.advance(),this.getMode()==="development"&&await this.saveDashFile(),this.includedFiles.resetAll(),this.progress.advance(),this.console.log(`Dash compiled ${this.includedFiles.all().length} files in ${Date.now()-e}ms!`)}async updateFiles(e,t=!0){var o;if(!this.isCompilerActivated||e.length===0)return;this.buildType="hotUpdate",this.jsRuntime.clearCache(),this.progress.setTotal(8),this.console.log(`Dash is starting to update ${e.length} files...`),await this.includedFiles.load(this.dashFilePath),await this.plugins.runBuildStartHooks();const s=[];for(const l of e){let c=this.includedFiles.get(l);c||([c]=await this.includedFiles.add([l])),s.push(c)}this.progress.advance();const i=[];for(const l of s)i.push(new Set([...l.requiredFiles]));this.progress.advance(),await this.loadFiles.run(s),this.progress.advance();for(let l=0;l<s.length;l++){const c=s[l];[...c.requiredFiles].filter(d=>!i[l].has(d)).forEach(d=>this.includedFiles.query(d).forEach(y=>y.addUpdateFile(c))),[...i[l]].filter(d=>!c.requiredFiles.has(d)).forEach(d=>this.includedFiles.query(d).forEach(y=>y.removeUpdateFile(c)))}this.progress.advance();const n=new Set(s.map(l=>[...l.filesToLoadForHotUpdate()]).flat());this.console.log(`Dash is loading ${n.size} files...`),await this.loadFiles.run([...n.values()].filter(l=>!s.includes(l))),this.progress.advance();const r=new Set(s.map(l=>[...l.getHotUpdateChain()]).flat());for(const l of n)l.isDone||(l.data=(o=await this.plugins.runTransformHooks(l))!=null?o:l.data,r.has(l)||(l.isDone=!0));this.progress.advance(),this.console.log(`Dash is compiling ${r.size} files...`),await this.fileTransformer.run(r,!0),await this.loadFiles.awaitAllFilesCopied(),this.progress.advance(),await this.plugins.runBuildEndHooks(),t&&await this.saveDashFile(),this.includedFiles.resetAll(),this.console.log(`Dash finished updating ${r.size} files!`),this.progress.advance()}async compileFile(e,t){var r;if(!this.isCompilerActivated)return[[],t];this.buildType="fileRequest",this.jsRuntime.clearCache(),this.progress.setTotal(7),await this.plugins.runBuildStartHooks(),await this.includedFiles.load(this.dashFilePath);let s=this.includedFiles.get(e);s||([s]=await this.includedFiles.add([e])),s.setFileHandle({getFile:async()=>new File([t],j.basename(e))}),await this.loadFiles.loadFile(s,!1),this.progress.advance();const i=s.filesToLoadForHotUpdate();await this.loadFiles.run([...i.values()].filter(o=>s!==o),!1),this.progress.advance();for(const o of i)o.isDone||(o.data=(r=await this.plugins.runTransformHooks(o))!=null?r:o.data);this.progress.advance();const n=await this.fileTransformer.transformFile(s,!0,!0);return this.progress.advance(),await this.includedFiles.load(this.dashFilePath),this.progress.advance(),await this.plugins.runBuildEndHooks(),[[...i].map(o=>o.filePath),n]}async unlinkMultiple(e,t=!0,s=!1){if(!this.isCompilerActivated||e.length===0)return;const i=[];for(const n of e)await this.unlink(n,!1,s).catch(r=>i.push(r));if(i.length>0)throw i[0];t&&await this.saveDashFile()}async unlink(e,t=!0,s=!1){if(!this.isCompilerActivated)return;const i=await this.getCompilerOutputPath(e);!i||i===e||(s||(await this.plugins.runBeforeFileUnlinked(e),this.includedFiles.remove(e)),await this.outputFileSystem.unlink(i),t&&await this.saveDashFile())}async rename(e,t){!this.isCompilerActivated||(await this.unlink(e,!1),await this.updateFiles([t],!1),await this.saveDashFile())}async getCompilerOutputPath(e){var i,n;if(!this.isCompilerActivated)return;const t=(i=this.includedFiles.get(e))!=null?i:new q(this,e);if(t&&t.outputPath!==e)return(n=t.outputPath)!=null?n:void 0;const s=await this.plugins.runTransformPathHooks(t);if(!!s)return s}async getFileMetadata(e){if(!this.isCompilerActivated)return;const t=this.includedFiles.get(e);return t?t.getAllMetadata():null}async getFileDependencies(e){if(!this.isCompilerActivated)return[];await this.includedFiles.load(this.dashFilePath);const t=this.includedFiles.get(e);return t?[...t.filesToLoadForHotUpdate()].map(s=>s.isVirtual?s.outputPath:s.filePath).filter(s=>s!==null&&s!==e):[]}async saveDashFile(){await this.includedFiles.save(this.dashFilePath)}async compileIncludedFiles(e=this.includedFiles.all()){this.console.time("Loading files..."),await this.loadFiles.run(e),this.console.timeEnd("Loading files..."),this.progress.advance(),this.console.time("Resolving file order...");const t=this.fileOrderResolver.run(e);this.console.timeEnd("Resolving file order..."),this.progress.advance(),this.console.time("Transforming files..."),await this.fileTransformer.run(t),this.console.timeEnd("Transforming files..."),this.progress.advance(),await this.loadFiles.awaitAllFilesCopied()}async compileAdditionalFiles(e,t=!0){const s=await this.includedFiles.add(e,t);this.progress.addToTotal(3),s.forEach(i=>i.reset()),await this.compileIncludedFiles(s)}}class De{async allFiles(e){const t=[],s=await this.readdir(e);for(const{name:i,kind:n}of s)n==="directory"?t.push(...await this.allFiles(j.join(e,i))):n==="file"&&t.push(j.join(e,i));return t}async copyFile(e,t,s=this){const i=await this.readFile(e);await s.writeFile(t,new Uint8Array(await i.arrayBuffer()))}async writeJson(e,t,s=!0){await this.writeFile(e,JSON.stringify(t,null,s?"	":0))}async readJson(e){const t=await this.readFile(e);try{return await H.default.parse(await t.text())}catch{throw new Error(`Invalid JSON: ${e}`)}}watchDirectory(e,t){console.warn("Watching a directory for changes is not supported on this platform!")}}Object.defineProperty(_,"initRuntimes",{enumerable:!0,get:function(){return R.initRuntimes}}),_.Command=E,_.Component=Q,_.Console=ee,_.Dash=xe,_.DefaultConsole=te,_.FileSystem=De,Object.defineProperty(_,"__esModule",{value:!0}),_[Symbol.toStringTag]="Module"});
